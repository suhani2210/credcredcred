{"ast":null,"code":"var _jsxFileName = \"/Users/suhani/CredTech-1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Layout from './components/Layout';\nimport CompanySelector from './components/CompanySelector';\nimport CreditScoreDisplay from './components/CreditScoreDisplay';\nimport FinancialCharts from './components/FinancialCharts';\n\n// API base URL - change this to your backend URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000';\nfunction App() {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [analysisData, setAnalysisData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch available companies on app load\n  useEffect(() => {\n    fetchCompanies();\n  }, []);\n  const fetchCompanies = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/companies`);\n      const data = await response.json();\n      setCompanies(data.companies || []);\n    } catch (error) {\n      console.error('Error fetching companies:', error);\n      // Fallback to hardcoded companies if API fails\n      setCompanies([{\n        ticker: 'AAPL',\n        name: 'Apple Inc.'\n      }, {\n        ticker: 'MSFT',\n        name: 'Microsoft Corporation'\n      }, {\n        ticker: 'GOOGL',\n        name: 'Alphabet Inc.'\n      }, {\n        ticker: 'AMZN',\n        name: 'Amazon.com Inc.'\n      }, {\n        ticker: 'TSLA',\n        name: 'Tesla Inc.'\n      }, {\n        ticker: 'META',\n        name: 'Meta Platforms Inc.'\n      }]);\n    }\n  };\n  const handleCompanySelect = async ticker => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/company-analysis/${ticker}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch analysis for ${ticker}`);\n      }\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n\n      // Find the selected company from the companies list\n      const company = companies.find(c => c.ticker === ticker);\n      setSelectedCompany(company);\n      setAnalysisData(data);\n    } catch (error) {\n      console.error('Error fetching company analysis:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(CompanySelector, {\n          companies: companies,\n          selectedCompany: selectedCompany,\n          onCompanySelect: handleCompanySelect,\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '1rem',\n            backgroundColor: '#fee2e2',\n            border: '1px solid #fecaca',\n            borderRadius: '0.5rem',\n            color: '#dc2626',\n            marginTop: '1rem'\n          },\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            padding: '2rem',\n            color: '#6b7280'\n          },\n          children: \"Loading analysis...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), selectedCompany && analysisData && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-grid\",\n          children: [/*#__PURE__*/_jsxDEV(CreditScoreDisplay, {\n            company: selectedCompany,\n            analysisData: analysisData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FinancialCharts, {\n            company: selectedCompany,\n            analysisData: analysisData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7l9zIMMjS36PrGNkpbS0QTT0p68=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Layout","CompanySelector","CreditScoreDisplay","FinancialCharts","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","companies","setCompanies","selectedCompany","setSelectedCompany","analysisData","setAnalysisData","loading","setLoading","error","setError","fetchCompanies","response","fetch","data","json","console","ticker","name","handleCompanySelect","ok","Error","company","find","c","message","className","children","onCompanySelect","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","backgroundColor","border","borderRadius","color","marginTop","textAlign","_c","$RefreshReg$"],"sources":["/Users/suhani/CredTech-1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Layout from './components/Layout';\nimport CompanySelector from './components/CompanySelector';\nimport CreditScoreDisplay from './components/CreditScoreDisplay';\nimport FinancialCharts from './components/FinancialCharts';\n\n// API base URL - change this to your backend URL\nconst API_BASE_URL = 'http://localhost:5000';\n\nfunction App() {\n  const [companies, setCompanies] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [analysisData, setAnalysisData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch available companies on app load\n  useEffect(() => {\n    fetchCompanies();\n  }, []);\n\n  const fetchCompanies = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/companies`);\n      const data = await response.json();\n      setCompanies(data.companies || []);\n    } catch (error) {\n      console.error('Error fetching companies:', error);\n      // Fallback to hardcoded companies if API fails\n      setCompanies([\n        { ticker: 'AAPL', name: 'Apple Inc.' },\n        { ticker: 'MSFT', name: 'Microsoft Corporation' },\n        { ticker: 'GOOGL', name: 'Alphabet Inc.' },\n        { ticker: 'AMZN', name: 'Amazon.com Inc.' },\n        { ticker: 'TSLA', name: 'Tesla Inc.' },\n        { ticker: 'META', name: 'Meta Platforms Inc.' }\n      ]);\n    }\n  };\n\n  const handleCompanySelect = async (ticker) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(`${API_BASE_URL}/api/company-analysis/${ticker}`);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch analysis for ${ticker}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.error) {\n        throw new Error(data.error);\n      }\n      \n      // Find the selected company from the companies list\n      const company = companies.find(c => c.ticker === ticker);\n      \n      setSelectedCompany(company);\n      setAnalysisData(data);\n      \n    } catch (error) {\n      console.error('Error fetching company analysis:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Layout>\n        <div className=\"main-content\">\n          <CompanySelector \n            companies={companies}\n            selectedCompany={selectedCompany}\n            onCompanySelect={handleCompanySelect}\n            loading={loading}\n          />\n          \n          {error && (\n            <div style={{\n              padding: '1rem',\n              backgroundColor: '#fee2e2',\n              border: '1px solid #fecaca',\n              borderRadius: '0.5rem',\n              color: '#dc2626',\n              marginTop: '1rem'\n            }}>\n              Error: {error}\n            </div>\n          )}\n          \n          {loading && (\n            <div style={{\n              textAlign: 'center',\n              padding: '2rem',\n              color: '#6b7280'\n            }}>\n              Loading analysis...\n            </div>\n          )}\n          \n          {selectedCompany && analysisData && !loading && (\n            <div className=\"dashboard-grid\">\n              <CreditScoreDisplay \n                company={selectedCompany}\n                analysisData={analysisData}\n              />\n              <FinancialCharts \n                company={selectedCompany}\n                analysisData={analysisData}\n              />\n            </div>\n          )}\n        </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}